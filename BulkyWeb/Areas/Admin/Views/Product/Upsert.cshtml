@model ProductVM

<div class="card shadow border-0 mt-4">
    <div class="card-header bg-secondary bg-gradient m-lg-0 py-3">
    <div class="row">
            <div class="d-flex justify-content-between align-content-between">
            <h2 class="col-6 text-primary">@(Model.Product.ProductId != 0 ? "Update" : "Create") Product</h2>
            <a asp-controller="Product" asp-action="Index" class="btn btn-dark" style="width:150px ;height:35px">Back to List</a>
        </div>
    </div>
    </div>
    <div class="card-body p-4 ">
        <form method="post" class="row" enctype="multipart/form-data">
            <input asp-for="Product.ProductId" hidden/>
            <input asp-for="Product.ImgUrl" hidden />
            <div class="row">
                <div class="col-10">
                    <div class="border-3 p-3">
                <div class="form-floating py-2 col-12">
                    <input asp-for="Product.Title" class="form-control border-0 shadow mb-2" />
                    <label asp-for="Product.Title" class="ms-2 "></label>

                    <span asp-validation-for="Product.Title" class="text-danger"></span>
                </div>
                <div class=" py-2 col-12">
                    <label asp-for="Product.Description" class="ms-2 text-muted"></label>

                    <textarea asp-for="Product.Description" class="form-control border-0 shadow mb-2" ></textarea>
                    </div>
                <div class="form-floating py-2 col-12">
                    <input asp-for="Product.ISBN" class="form-control border-0 shadow mb-2" />
                    <label asp-for="Product.ISBN" class="ms-2 "></label>

                    <span asp-validation-for="Product.ISBN" class="text-danger"></span>
                </div>
                <div class="form-floating py-2 col-12">

                    <input asp-for="Product.Author" class="form-control border-0 shadow mb-2" />
                    <label asp-for="Product.Author" class="ms-2"></label>
                    <span asp-validation-for="Product.Author" class="text-danger"></span>
                </div>
                <div class="form-floating py-2 col-12">
                    <input asp-for="Product.ListPrice" class="form-control border-0 shadow mb-2" />
                    <label asp-for="Product.ListPrice" class="ms-2 "></label>

                    <span asp-validation-for="Product.ListPrice" class="text-danger"></span>
                </div>
                <div class="form-floating py-2 col-12">
                    <select asp-for="@Model.Product.CategoryId" asp-items="@Model.CategoryList" class="form-select border-0 shadow mb-2">
                        <option disabled selected>--Select Category--</option>
                    </select>
                    <label asp-for="Product.CategoryId" class="ms-2 "></label>

                    <span asp-validation-for="Product.CategoryId" class="text-danger"></span>
                </div>
                <div class="form-floating py-2 col-12">

                    <input asp-for="Product.Price" class="form-control border-0 shadow mb-2" />
                    <label asp-for="Product.Price" class="ms-2"></label>
                    <span asp-validation-for="Product.Price" class="text-danger"></span>
                </div>
                <div class="form-floating py-2 col-12">
                    <input asp-for="Product.Price50" class="form-control border-0 shadow mb-2" />
                    <label asp-for="Product.Price50" class="ms-2 "></label>

                    <span asp-validation-for="Product.Price50" class="text-danger"></span>
                </div>
                <div class="form-floating py-2 col-12">

                    <input asp-for="Product.Price100" class="form-control border-0 shadow mb-2" />
                    <label asp-for="Product.Price100" class="ms-2"></label>
                    <span asp-validation-for="Product.Price100" class="text-danger"></span>
                </div>
                <div class="form-floating py-2 col-12">

                    <input type="file" class="form-control border-0 shadow mb-2" name="file" />
                    <label asp-for="Product.ImgUrl" class="ms-2"></label>
                     </div>
                
                    @if(Model.Product.ProductId != 0)
                {
                    <button type = "submit" class="btn btn-primary form-control border"><i class="bi bi-database-fill-add"></i>Update </button>
                }  
                else
                {
                    <button type = "submit" class="btn btn-primary form-control border"><i class="bi bi-database-fill-add"></i>Create</button>
                }
        
        </div>
        </div>
               
                <div class="col-2">
                    <img src="@Model.Product.ImgUrl" width="100%" style="border-radius:5px; border:1px solid #bbb9b9"/>
                </div>
            </div>
        </form>
    </div>
</div>
            
        



@section Scripts{
    <script>
        tinymce.init({
          selector: 'textarea',
          plugins: [
            // Core editing features
            'anchor', 'autolink', 'charmap', 'codesample', 'emoticons', 'image', 'link', 'lists', 'media', 'searchreplace', 'table', 'visualblocks', 'wordcount',
            // Your account includes a free trial of TinyMCE premium features
            // Try the most popular premium features until Oct 9, 2024:
            'checklist', 'mediaembed', 'casechange', 'export', 'formatpainter', 'pageembed', 'a11ychecker', 'tinymcespellchecker', 'permanentpen', 'powerpaste', 'advtable', 'advcode', 'editimage', 'advtemplate', 'ai', 'mentions', 'tinycomments', 'tableofcontents', 'footnotes', 'mergetags', 'autocorrect', 'typography', 'inlinecss', 'markdown',
          ],
          toolbar: 'undo redo | blocks fontfamily fontsize | bold italic underline strikethrough | addcomment showcomments | spellcheckdialog a11ycheck typography | align lineheight | checklist numlist bullist indent outdent | emoticons charmap | removeformat',
          tinycomments_mode: 'embedded',
          tinycomments_author: 'Author name',
          mergetags_list: [
            { value: 'First.Name', title: 'First Name' },
            { value: 'Email', title: 'Email' },
          ],
          ai_request: (request, respondWith) => respondWith.string(() => Promise.reject('See docs to implement AI Assistant')),
        });
    </script>

    @{
        <partial name="_ValidationScriptsPartial" />
    }
}